<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinghuofirst.kill.model.mapper.BusinessRepository" >

    <resultMap id="BaseResultMap" type="com.xinghuofirst.kill.model.entity.Business" >
        <id column="business_id" property="businessId" jdbcType="INTEGER" />
        <result column="business_number" property="businessNumber" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="CHAR" />
        <result column="province" property="province" jdbcType="VARCHAR" />
        <result column="install_status" property="installStatus" jdbcType="INTEGER" />
        <result column="silent_status" property="silentStatus" jdbcType="INTEGER" />
        <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    </resultMap>


    <sql id="Base_Column_List" >
        `business_id`,`business_number`,`phone`,`name`,`sex`,`province`,`install_status`,`silent_status`,`idcard`
    </sql>
    <!--查出来一个可被分配的用户 于悦-->
    <select id="selectPerson" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT business_id
        FROM `business` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(business_id) FROM `business`)-(SELECT MIN(business_id) FROM `business`))+
        (SELECT MIN(business_id) FROM `business`)) AS id) AS t2
        WHERE t1.business_id >= t2.id and t1.install_status in (0,1) and t1.silent_status=0 and t1.province = #{province}
        ORDER BY t1.business_id LIMIT 1;
    </select>

    <!--按照省份查询用户资源 于悦-->
    <select id="selectBusinessByProvince" parameterType="java.lang.String" resultType="java.lang.Integer">
        select COUNT(*) from business
        WHERE silent_status=0
        AND install_status &lt; 2
        AND province like concat('%', #{province,jdbcType=VARCHAR}, '%')
    </select>

    <!--被秒杀后修改商户安装状态2 于悦-->
    <update id="updateBusinessInstallStatus" parameterType="java.lang.Integer" >
        update business
        set install_status =2
				where
				business_id=#{businessId,jdbcType=INTEGER}
    </update>



    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from `business`
        where `business_id` = #{businessId,jdbcType=INTEGER}
    </delete>


    <insert id="insert" parameterType="com.xinghuofirst.kill.model.entity.Business" >
        insert into `business` (`business_number`,`phone`,`name`,`sex`,`province`,`install_status`,`silent_status`,`idcard`)
        values (#{businessNumber,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{sex,jdbcType=CHAR},#{province,jdbcType=VARCHAR},#{installStatus,jdbcType=INTEGER},#{silentStatus,jdbcType=INTEGER},#{idcard,jdbcType=VARCHAR})
    </insert>


    <insert id="insertSelective" parameterType="com.xinghuofirst.kill.model.entity.Business" >
        insert into `business`
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="businessNumber != null" >
                `business_number`,
            </if>
            <if test="phone != null" >
                `phone`,
            </if>
            <if test="name != null" >
                `name`,
            </if>
            <if test="sex != null" >
                `sex`,
            </if>
            <if test="province != null" >
                `province`,
            </if>
            <if test="installStatus != null or installStatus == 0" >
                `install_status`,
            </if>
            <if test="silentStatus != null or silentStatus == 0" >
                `silent_status`,
            </if>
            <if test="idcard != null" >
                `idcard`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="businessNumber != null" >
                #{businessNumber,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                #{sex,jdbcType=CHAR},
            </if>
            <if test="province != null" >
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="installStatus != null or installStatus == 0" >
                #{installStatus,jdbcType=INTEGER},
            </if>
            <if test="silentStatus != null or silentStatus == 0" >
                #{silentStatus,jdbcType=INTEGER},
            </if>
            <if test="idcard != null" >
                #{idcard,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--秒杀后，更新分配商户结果 于悦-->
    <update id="updateKillSuccess" >
        update kill_success SET business_id=#{businessId} where kill_number=#{killNumber}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.xinghuofirst.kill.model.entity.Business" >
        update `business`
        <set >
            <if test="businessNumber != null" >
                `business_number` = #{businessNumber,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                `phone` = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                `sex` = #{sex,jdbcType=CHAR},
            </if>
            <if test="province != null" >
                `province` = #{province,jdbcType=VARCHAR},
            </if>
            <if test="installStatus != null or installStatus == 0" >
                `install_status` = #{installStatus,jdbcType=INTEGER},
            </if>
            <if test="silentStatus != null or silentStatus == 0" >
                `silent_status` = #{silentStatus,jdbcType=INTEGER},
            </if>
            <if test="idcard != null" >
                `idcard` = #{idcard,jdbcType=VARCHAR},
            </if>
        </set>
        where `business_id` = #{businessId,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.xinghuofirst.kill.model.entity.Business" >
        update `business` set
        `business_number` = #{businessNumber,jdbcType=VARCHAR},
        `phone` = #{phone,jdbcType=VARCHAR},
        `name` = #{name,jdbcType=VARCHAR},
        `sex` = #{sex,jdbcType=CHAR},
        `province` = #{province,jdbcType=VARCHAR},
        `install_status` = #{installStatus,jdbcType=INTEGER},
        `silent_status` = #{silentStatus,jdbcType=INTEGER},
        `idcard` = #{idcard,jdbcType=VARCHAR}
        where `business_id` = #{businessId,jdbcType=INTEGER}
    </update>


    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `business`
        where `business_id` = #{businessId,jdbcType=INTEGER}
    </select>


    <sql id="findPageWithWhereLike" >
        <where>
            <if test="businessId != null or businessId == 0" >
                and `business_id` = #{businessId,jdbcType=INTEGER}
            </if>
            <if test="businessNumber != null" >
                and `business_number` = #{businessNumber,jdbcType=VARCHAR}
            </if>
            <if test="phone != null" >
                and `phone` = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="name != null" >
                and `name` = #{name,jdbcType=VARCHAR}
            </if>
            <if test="sex != null" >
                and `sex` = #{sex,jdbcType=CHAR}
            </if>
            <if test="province != null" >
                and `province` = #{province,jdbcType=VARCHAR}
            </if>
            <if test="installStatus != null or installStatus == 0" >
                and `install_status` = #{installStatus,jdbcType=INTEGER}
            </if>
            <if test="silentStatus != null or silentStatus == 0" >
                and `silent_status` = #{silentStatus,jdbcType=INTEGER}
            </if>
            <if test="idcard != null" >
                and `idcard` = #{idcard,jdbcType=VARCHAR}
            </if>
            </where>
    </sql>

    <sql id="findPageWithWhere" >
        <where> 1=1
            <if test="businessId != null or businessId == 0" >
                and `business_id` like concat('%', #{businessId,jdbcType=INTEGER}, '%')
            </if>
            <if test="businessNumber != null" >
                and `business_number` like concat('%', #{businessNumber,jdbcType=VARCHAR}, '%')
            </if>
            <if test="phone != null" >
                and `phone` like concat('%', #{phone,jdbcType=VARCHAR}, '%')
            </if>
            <if test="name != null" >
                and `name` like concat('%', #{name,jdbcType=VARCHAR}, '%')
            </if>
            <if test="sex != null" >
                and `sex` like concat('%', #{sex,jdbcType=CHAR}, '%')
            </if>
            <if test="province != null" >
                and `province` like concat('%', #{province,jdbcType=VARCHAR}, '%')
            </if>
            <if test="installStatus != null or installStatus == 0" >
                and `install_status` like concat('%', #{installStatus,jdbcType=INTEGER}, '%')
            </if>
            <if test="silentStatus != null or silentStatus == 0" >
                and `silent_status` like concat('%', #{silentStatus,jdbcType=INTEGER}, '%')
            </if>
            <if test="idcard != null" >
                and `idcard` like concat('%', #{idcard,jdbcType=VARCHAR}, '%')
            </if>
        </where>
    </sql>


    <sql id="findPageWithOrder">
        <if test="null != orders" >
            ORDER BY
            <foreach collection="orders.keys" item="k" separator=",">
                <if test='k == "businessId"'>
                    `business_id`
                </if>
                <if test='k == "businessNumber"'>
                    `business_number`
                </if>
                <if test='k == "phone"'>
                    `phone`
                </if>
                <if test='k == "name"'>
                    `name`
                </if>
                <if test='k == "sex"'>
                    `sex`
                </if>
                <if test='k == "province"'>
                    `province`
                </if>
                <if test='k == "installStatus"'>
                    `install_status`
                </if>
                <if test='k == "silentStatus"'>
                    `silent_status`
                </if>
                <if test='k == "idcard"'>
                    `idcard`
                </if>
                <if test='orders[k] == "asc"'>
                    ASC
                </if>
                <if test='orders[k] == "desc"'>
                    DESC
                </if>
            </foreach>
        </if>
    </sql>


    <select id="findOne" parameterType="com.xinghuofirst.kill.model.entity.Business" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `business`
        <include refid="findPageWithWhere" />
        limit 1
    </select>


    <select id="findAllWithResult" parameterType="com.xinghuofirst.kill.model.entity.Business" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `business`
        <include refid="findPageWithWhere" />

    </select>


    <select id="findPageWithResult" parameterType="com.xinghuofirst.kill.model.entity.Business" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `business`
        <include refid="findPageWithWhere" />
        <include refid="findPageWithOrder" />
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCount" parameterType="com.xinghuofirst.kill.model.entity.Business" resultType="java.lang.Integer" >
        select count(1)
        from `business`
        <include refid="findPageWithWhere" />
    </select>

    <select id="findPageWithResultLike" parameterType="com.xinghuofirst.kill.model.entity.Business" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `business`
        <include refid="findPageWithWhereLike" />
        <include refid="findPageWithOrder" />
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCountLike" parameterType="com.xinghuofirst.kill.model.entity.Business" resultType="java.lang.Integer" >
        select count(1)
        from `business`
        <include refid="findPageWithWhereLike" />
    </select>


</mapper>