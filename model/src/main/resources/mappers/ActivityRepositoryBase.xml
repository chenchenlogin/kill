<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinghuofirst.kill.model.mapper.ActivityRepository" >

    <resultMap id="BaseResultMap" type="com.xinghuofirst.kill.model.entity.Activity" >
        <id column="activity_id" property="activityId" jdbcType="INTEGER" />
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
        <result column="province" property="province" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="quentity" property="quentity" jdbcType="INTEGER" />
        <result column="surplus" property="surplus" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <!--查询当前时间之后的活动,不包括正在进行的活动 于悦-->
    <select id="selectAfterActivity" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `activity`
        <where>
            AND now() &lt; start_time
        </where>
    </select>
    <!--查询上一场活动  于悦-->
    <select id="selectLastActivity" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `activity`
        <where>
            AND now()  &gt; end_time
            ORDER BY end_time DESC  LIMIT 1
        </where>
    </select>

    <!--查询下一场活动  于悦-->
    <select id="selectNextActivity" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `activity`
        <where>
            AND now() &lt; start_time
            ORDER BY start_time ASC  LIMIT 1
        </where>
    </select>

    <!--查询正在进行的活动 于悦-->
    <select id="selectNowActivity" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `activity`
        <where>
            AND now() BETWEEN start_time AND end_time ORDER BY start_time ASC  LIMIT 1
        </where>
    </select>

    <!--查询活动库存  于悦-->
    <select id="selectActivitySurplus" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
        select
        surplus
        from  `activity`
        <where>
            AND activity_id = #{activityId}
        </where>
    </select>


    <!--根据秒杀活动跟鑫管家Id查询抢购数量  于悦-->
    <select id="countByActivityPersonId" resultType="java.lang.Integer">
        SELECT
        COUNT(1) AS total
        FROM
                kill_success
        WHERE
        activity_id = #{activityId}
        AND person_id = #{personId}
  </select>

    <sql id="Base_Column_List" >
        `activity_id`,`start_time`,`end_time`,`province`,`description`,`quentity`,`surplus`,`create_time`
    </sql>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from `activity`
        where `activity_id` = #{activityId,jdbcType=INTEGER}
    </delete>


    <insert id="insert" parameterType="com.xinghuofirst.kill.model.entity.Activity" >
        insert into `activity` (`start_time`,`end_time`,`province`,`description`,`quentity`,`surplus`,`create_time`)
        values (#{startTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP},#{province,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},#{quentity,jdbcType=INTEGER},#{surplus,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP})
    </insert>


    <insert id="insertSelective" parameterType="com.xinghuofirst.kill.model.entity.Activity" >
        insert into `activity`
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="startTime != null" >
                `start_time`,
            </if>
            <if test="endTime != null" >
                `end_time`,
            </if>
            <if test="province != null" >
                `province`,
            </if>
            <if test="description != null" >
                `description`,
            </if>
            <if test="quentity != null or quentity == 0" >
                `quentity`,
            </if>
            <if test="surplus != null or surplus == 0" >
                `surplus`,
            </if>
            <if test="createTime != null" >
                `create_time`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="startTime != null" >
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="province != null" >
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="quentity != null or quentity == 0" >
                #{quentity,jdbcType=INTEGER},
            </if>
            <if test="surplus != null or surplus == 0" >
                #{surplus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.xinghuofirst.kill.model.entity.Activity" >
        update `activity`
        <set >
            <if test="startTime != null" >
                `start_time` = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                `end_time` = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="province != null" >
                `province` = #{province,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                `description` = #{description,jdbcType=VARCHAR},
            </if>
            <if test="quentity != null or quentity == 0" >
                `quentity` = #{quentity,jdbcType=INTEGER},
            </if>
            <if test="surplus != null or surplus == 0" >
                `surplus` = #{surplus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                `create_time` = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where `activity_id` = #{activityId,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.xinghuofirst.kill.model.entity.Activity" >
        update `activity` set
        `start_time` = #{startTime,jdbcType=TIMESTAMP},
        `end_time` = #{endTime,jdbcType=TIMESTAMP},
        `province` = #{province,jdbcType=VARCHAR},
        `description` = #{description,jdbcType=VARCHAR},
        `quentity` = #{quentity,jdbcType=INTEGER},
        `surplus` = #{surplus,jdbcType=INTEGER},
        `create_time` = #{createTime,jdbcType=TIMESTAMP}
        where `activity_id` = #{activityId,jdbcType=INTEGER}
    </update>


    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `activity`
        where `activity_id` = #{activityId,jdbcType=INTEGER}
    </select>

   <select id="findOne" parameterType="com.xinghuofirst.kill.model.entity.Activity" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `activity`
        <include refid="findPageWithWhereLike" />
        limit 1
    </select>
    <sql id="findPageWithWhereLike" >
        <where>
            <if test="activityId != null or activityId == 0" >
                and `activity_id` like concat('%', #{activityId}, '%')
            </if>
            <if test="startTime != null" >
                and `start_time` like concat('%', #{startTime}, '%')
            </if>
            <if test="endTime != null" >
                and `end_time` like concat('%', #{endTime}, '%')
            </if>
            <if test="province != null and province !='' " >
                and `province` like concat('%', #{province}, '%')
            </if>
            <if test="description != null" >
                and `description` like concat('%', #{description}, '%')
            </if>
            <if test="quentity != null or quentity == 0" >
                and `quentity` like concat('%', #{quentity}, '%')
            </if>
            <if test="surplus != null or surplus == 0" >
                and `surplus` like concat('%', #{surplus}, '%')
            </if>
            <if test="createTime != null" >
                and `create_time` like concat('%', #{createTime}, '%')
            </if>
        </where>
    </sql>
    <select id="findAllWithResult" parameterType="com.xinghuofirst.kill.model.entity.Activity" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from activity
        <include refid="findPageWithWhereLike" />
    </select>


    <select id="findPageWithResult" parameterType="com.xinghuofirst.kill.model.entity.Activity" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `activity`
        <include refid="findPageWithWhereLike" />
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCount" parameterType="com.xinghuofirst.kill.model.entity.Activity" resultType="java.lang.Integer" >
        select count(1)
        from `activity`
        <include refid="findPageWithWhereLike" />
    </select>

    <select id="findPageWithResultLike" parameterType="com.xinghuofirst.kill.model.entity.Activity" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from  `activity`
        <include refid="findPageWithWhereLike" />
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCountLike" parameterType="com.xinghuofirst.kill.model.entity.Activity" resultType="java.lang.Integer" >
        select count(1)
        from `activity`
        <include refid="findPageWithWhereLike" />
    </select>


</mapper>
